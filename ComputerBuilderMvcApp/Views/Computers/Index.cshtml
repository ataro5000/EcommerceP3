@model IEnumerable<ComputerBuilderMvcApp.ViewModels.ComputerViewModel>

@{
    ViewData["Title"] = "Computers";
}

<h1>@ViewData["Title"]</h1>

<div class="row">
    @if (Model != null && Model.Any())
    {
        foreach (var computer in Model)
        {
            <div class="col-md-4">
                <div class="card mb-3">
                    <div class="card-body">
                        <h5 class="card-title">@computer.Name</h5>
                        <p class="card-text">Base Price: @computer.TotalPrice.ToString("C")</p>
                        <h6>Standard Components:</h6>
                        <ul>
                            @foreach (var component in computer.StandardComponents.Take(3)) // Show a few components
                            {
                                <li>@component.Type: @component.Spec</li>
                            }
                            @if (computer.StandardComponents.Count > 3)
                            {
                                <li>... and more</li>
                            }
                        </ul>
                        <a asp-controller="Computers" asp-action="Details" asp-route-id="@computer.Id" class="btn btn-info">View
                            Details & Customize</a>
                        <form asp-controller="Cart" asp-action="AddToCart" method="post" style="display:inline;">
                            <input type="hidden" name="computerId" value="@computer.Id" />
                            @* You could add a quantity input here if you want users to specify quantity *@
                            @* <input type="number" name="quantity" value="1" min="1" style="width: 50px;" /> *@
                            <button type="submit" class="btn btn-success btn-sm">Add to Cart</button>
                        </form>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <p>No computers found.</p>
    }
</div>